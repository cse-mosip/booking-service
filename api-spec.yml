openapi: 3.0.3
info:
  title: Booking service
  description: |-
    Booking service backend
  version: "1.0"
servers:
  - url: http://localhost:8080
tags:
  - name: resource
    description: Resource that can be booked
  - name: booking
    description: Booking of a specific resource
paths:
  /resource:
    get:
      tags:
        - resource
      summary: Get all resources
      operationId: getAllResources
      responses:
        "200":
          description: List of resources
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resources"
    post:
      tags:
        - resource
      summary: Add a new resource
      operationId: addResource
      requestBody:
        $ref: "#/components/requestBodies/NewResource"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resource"
  /resource/{id}:
    get:
      tags:
        - resource
      summary: Find resource by ID
      description: Returns a single resource
      operationId: getResourceById
      parameters:
        - name: id
          in: path
          description: ID of resource to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resource"
        "404":
          description: Resource not found
    delete:
      tags:
        - resource
      summary: Deletes a resource
      description: delete a resource
      operationId: deleteResource
      parameters:
        - name: id
          in: path
          description: Resource id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: No such resource

components:
  schemas:
    Resource:
      required:
        - id
        - name
        - count
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 12
        name:
          type: string
          example: Lab 1
        count:
          type: integer
          description: Number of instances of the resource
          example: 40
    Resources:
      type: array
      items:
        $ref: "#/components/schemas/Resource"

  requestBodies:
    NewResource:
      required: true
      description: New resource details
      content:
        application/json:
          schema:
            required:
              - name
              - count
            type: object
            properties:
              name:
                type: string
                example: Lab 1
              count:
                type: integer
                example: 40
